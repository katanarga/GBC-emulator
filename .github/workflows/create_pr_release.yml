name: New Release PR
on:
  workflow_dispatch: 
    branches: [dev]

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get the latest tag
        id: latesttag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: show the latest tag
        id: showtag
        run: echo "latest tag is ${{ steps.latesttag.outputs.tag }}"

      - name: Generate changelog
        id: changelog
        run: echo "commits=$(git log --oneline --pretty=format:"%s" origin/master..dev)" >> $GITHUB_OUTPUT

      - name: Analyze commits and increment version
        id: versioning
        run: |
          LAST_VERSION=${{ steps.latesttag.outputs.tag }}
          MAJOR_VERSION=$(echo $LAST_VERSION | cut -d. -f1)
          MINOR_VERSION=$(echo $LAST_VERSION | cut -d. -f2)
          PATCH_VERSION=$(echo $LAST_VERSION | cut -d. -f3)
          PR_LABELS=""

          COMMITS=${{ steps.changelog.outputs.commits }}
          echo "list of commits: $COMMITS"
          echo "end list of commits"

          if echo "$COMMITS" | grep -q "feat"; then
            MINOR_VERSION=$((MINOR_VERSION+1))
            PATCH_VERSION=0
          elif echo "$COMMITS" | grep -q "fix"; then
            PATCH_VERSION=$((PATCH_VERSION+1))
          fi

          if echo "$COMMITS" | grep -q "feat"; then
            PR_LABELS+="feature,"
          fi
          if echo "$COMMITS" | grep -q "fix"; then
            PR_LABELS+="bug,"
          fi
          if echo "$COMMITS" | grep -q "docs"; then
            PR_LABELS+="docs,"
          fi
          if echo "$COMMITS" | grep -q "perf"; then
            PR_LABELS+="performance,"
          fi

          NEW_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
          PR_LABELS=${PR_LABELS%?}

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "pr_labels=$PR_LABELS" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: devops-infra/action-pull-request@v0.5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: dev
          target_branch: master
          title: ${{ format('Release {0}', steps.versioning.outputs.version) }}
          body: ${{ steps.changelog.outputs.commits }}
          assignee: ${{ github.actor }}
          reviewer: "lcordenod,katanarga"
          label: ${{ steps.versioning.outputs.pr_labels }}
